version: "3.5"
services:
  zk-1:
    image: confluentinc/cp-zookeeper:7.1.1-1-ubi8
    restart: always
    container_name: zk-1
    hostname: zk-1
    ports:
      - "12181:12181"
    volumes:
      - test-data-zk-log-1:/var/lib/zookeeper/log
      - test-data-zk-data-1:/var/lib/zookeeper/data
    networks:
      - test-confluent
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=12181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2

  kafka-1:
    image: confluentinc/cp-server:7.1.1-1-ubi8
    restart: always
    container_name: kafka-1
    hostname: kafka-1
    ports:
      - "19092:19092"
      - "19093:19093"      
    networks:
      - test-confluent
    volumes:
      - test-data-kafka-1:/var/lib/kafka/data
      - ./creds/brokers/kafka-1:/etc/kafka/secrets
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zk-1:12181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 3600000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      #KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      #KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19092,BROKER://0.0.0.0:9092
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:19092,BROKER://kafka-1:9092
      KAFKA_LISTENERS: SSL://0.0.0.0:19093,BROKER://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: SSL://13.49.128.80:19093,BROKER://kafka-1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL,BROKER:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: keystore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_SSL_PRINCIPAL_MAPPING_RULES: "RULE:^.*[Cc][Nn]=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT"
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SUPER_USERS: User:landau;User:kafka;User:CN=kafka-1,L=MountainView,O=CONFLUENT,C=US;User:CN=kafka-2,L=MountainView,O=CONFLUENT,C=US;User:CN=kafka-3,L=MountainView,O=CONFLUENT,C=US
      # KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=DEBUG, stdout"
      # KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  kafka-2:
    image: confluentinc/cp-server:7.1.1-1-ubi8
    restart: always
    container_name: kafka-2
    hostname: kafka-2
    ports:
      - "29092:29092"
      - "29093:29093"  
    networks:
      - test-confluent
    volumes:
      - test-data-kafka-2:/var/lib/kafka/data
      - ./creds/brokers/kafka-2:/etc/kafka/secrets
    environment:
      KAFKA_BROKER_ID: 102
      KAFKA_ZOOKEEPER_CONNECT: zk-1:12181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 3600000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      #KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      # KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,BROKER://0.0.0.0:9092
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,BROKER://kafka-2:9092
      KAFKA_LISTENERS: SSL://0.0.0.0:29093,BROKER://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: SSL://13.49.128.80:29093,BROKER://kafka-2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL,BROKER:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: keystore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      KAFKA_SSL_PRINCIPAL_MAPPING_RULES: "RULE:^.*[Cc][Nn]=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT"
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SUPER_USERS: User:landau;User:kafka;User:CN=kafka-1,L=MountainView,O=CONFLUENT,C=US;User:CN=kafka-2,L=MountainView,O=CONFLUENT,C=US;User:CN=kafka-3,L=MountainView,O=CONFLUENT,C=US
      # KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=DEBUG, stdout"
      # KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  kafka-3:
    image: confluentinc/cp-server:7.1.1-1-ubi8
    restart: always
    container_name: kafka-3
    hostname: kafka-3
    ports:
      - "39092:39092"
      - "39093:39093"  
    networks:
      - test-confluent
    volumes:
      - test-data-kafka-3:/var/lib/kafka/data
      - ./creds/brokers/kafka-3:/etc/kafka/secrets
    environment:
      KAFKA_BROKER_ID: 103
      KAFKA_ZOOKEEPER_CONNECT: zk-1:12181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 3600000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      #KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      # KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:39092,BROKER://0.0.0.0:9092
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:39092,BROKER://kafka-3:9092
      KAFKA_LISTENERS: SSL://0.0.0.0:39093,BROKER://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: SSL://13.49.128.80:39093,BROKER://kafka-3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL,BROKER:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.pkcs12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: keystore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_SSL_PRINCIPAL_MAPPING_RULES: "RULE:^.*[Cc][Nn]=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT"
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SUPER_USERS: User:landau;User:kafka;User:CN=kafka-1,L=MountainView,O=CONFLUENT,C=US;User:CN=kafka-2,L=MountainView,O=CONFLUENT,C=US;User:CN=kafka-3,L=MountainView,O=CONFLUENT,C=US
      # KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=DEBUG, stdout"
      # KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

volumes:
  test-data-zk-log-1:
  test-data-zk-data-1:
  test-data-zk-log-2:
  test-data-zk-data-2:
  test-data-zk-log-3:
  test-data-zk-data-3:
  test-data-kafka-1:
  test-data-kafka-2:
  test-data-kafka-3:

networks:
  test-confluent:
